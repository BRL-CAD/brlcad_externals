set(sc_DESCRIPTION "
Option for enabling and disabling compilation of the NIST Step Class
Libraries provided with BRL-CAD's source code.  Default is AUTO,
responsive to the toplevel BRLCAD_BUNDLED_LIBS option and testing
first for a system version if BRLCAD_BUNDLED_LIBS is also AUTO.
")
set(sc_ALIASES ENABLE_SCL ENABLE_STEP ENABLE_STEP_CLASS_LIBRARIES)

THIRD_PARTY(stepcode SC stepcode sc_DESCRIPTION
  ALIASES ${sc_ALIASES}
  RESET_VARS EXP2CXX_EXEC EXP2CXX_EXECUTABLE_TARGET
  FLAGS NOSYS)

if(BRLCAD_SC_BUILD)

  file(STRINGS "${CMAKE_CURRENT_SOURCE_DIR}/stepcode/CMakeLists.txt" SC_LINES)
  foreach(SC ${SC_LINES})
    if ("${SC}" MATCHES "^set[(]SC_VERSION_MAJOR")
      string(REGEX MATCH [0-9]+ SC_MAJOR_VERSION "${SC}")
    endif ("${SC}" MATCHES "^set[(]SC_VERSION_MAJOR")
    if ("${SC}" MATCHES "^set[(]SC_VERSION_MINOR")
      string(REGEX MATCH [0-9]+ SC_MINOR_VERSION "${SC}")
    endif ("${SC}" MATCHES "^set[(]SC_VERSION_MINOR")
    if ("${SC}" MATCHES "^set[(]SC_VERSION_PATCH")
      string(REGEX MATCH [0-9]+ SC_PATCH_VERSION "${SC}")
    endif ("${SC}" MATCHES "^set[(]SC_VERSION_PATCH")
  endforeach(SC ${SC_LINES})

  set(SC_VERSION ${SC_MAJOR_VERSION}.${SC_MINOR_VERSION}.${SC_PATCH_VERSION})

  if (MSVC)
    set(SC_PREFIX "")
    set(SC_SUFFIX ${CMAKE_SHARED_LIBRARY_SUFFIX})
  elseif (APPLE)
    set(SC_PREFIX "lib")
    set(SC_SUFFIX ".${SC_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX}")
  elseif (OPENBSD)
    set(SC_PREFIX "lib")
    set(SC_SUFFIX "${CMAKE_SHARED_LIBRARY_SUFFIX}.${SC_MAJOR_VERSION}.${SC_MINOR_VERSION}")
  else (MSVC)
    set(SC_PREFIX "lib")
    set(SC_SUFFIX "${CMAKE_SHARED_LIBRARY_SUFFIX}.${SC_VERSION}")
  endif (MSVC)

  set(SC_DEPS)
  if (TARGET perplex)
    list(APPEND SC_DEPS perplex)
  endif (TARGET perplex)

  #set(STEPCODE_INSTDIR "${CMAKE_BINARY_INSTALL_ROOT}/stepcode")
  set(STEPCODE_INSTDIR "${CMAKE_BINARY_INSTALL_ROOT}")

  ExternalProject_Add(STEPCODE_BLD
    SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/stepcode"
    BUILD_ALWAYS ${EXT_BUILD_ALWAYS} ${LOG_OPTS}
    CMAKE_ARGS
    $<$<NOT:$<BOOL:${CMAKE_CONFIGURATION_TYPES}>>:-DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}>
    -DBIN_DIR=${BIN_DIR}
    -DBUILD_STATIC_LIBS=OFF
    -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
    -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}
    -DCMAKE_INSTALL_PREFIX=${STEPCODE_INSTDIR}
    -DCMAKE_INSTALL_RPATH=${CMAKE_BUILD_RPATH}
    -DCMAKE_INSTALL_RPATH_USE_LINK_PATH=${CMAKE_INSTALL_RPATH_USE_LINK_PATH}
    -DCMAKE_SKIP_BUILD_RPATH=${CMAKE_SKIP_BUILD_RPATH}
    -DLEMON_ROOT=${CMAKE_BINARY_INSTALL_ROOT}
    -DLEMON_TEMPLATE=${LEMON_TEMPLATE}
    -DLIB_DIR=${LIB_DIR}
    -DPERPLEX_ROOT=${CMAKE_BINARY_INSTALL_ROOT}
    -DPERPLEX_TEMPLATE=${PERPLEX_TEMPLATE}
    -DRE2C_ROOT=${CMAKE_BINARY_INSTALL_ROOT}
    -DSC_BUILD_SCHEMAS=
    -DSC_ENABLE_COVERAGE=OFF
    -DSC_ENABLE_TESTING=OFF
    -DSC_IS_SUBBUILD=ON -DSC_PYTHON_GENERATOR=OFF
    DEPENDS ${SC_DEPS}
    LOG_CONFIGURE ${EXT_BUILD_QUIET}
    LOG_BUILD ${EXT_BUILD_QUIET}
    LOG_INSTALL ${EXT_BUILD_QUIET}
    LOG_OUTPUT_ON_FAILURE ${EXT_BUILD_QUIET}
    )

  SetTargetFolder(STEPCODE_BLD "Third Party Libraries")
  SetTargetFolder(stepcode "Third Party Libraries")

endif(BRLCAD_SC_BUILD)

mark_as_advanced(EXP2CXX_EXECUTABLE)
mark_as_advanced(EXPPP_EXECUTABLE)
mark_as_advanced(STEPCODE_CORE_LIBRARY)
mark_as_advanced(STEPCODE_DAI_DIR)
mark_as_advanced(STEPCODE_DAI_LIBRARY)
mark_as_advanced(STEPCODE_DIR)
mark_as_advanced(STEPCODE_EDITOR_DIR)
mark_as_advanced(STEPCODE_EDITOR_LIBRARY)
mark_as_advanced(STEPCODE_EXPPP_DIR)
mark_as_advanced(STEPCODE_EXPPP_LIBRARY)
mark_as_advanced(STEPCODE_EXPRESS_DIR)
mark_as_advanced(STEPCODE_EXPRESS_LIBRARY)
mark_as_advanced(STEPCODE_INCLUDE_DIR)
mark_as_advanced(STEPCODE_INCLUDE_DIRS)
mark_as_advanced(STEPCODE_LIBRARIES)
mark_as_advanced(STEPCODE_STEPCORE_DIR)
mark_as_advanced(STEPCODE_UTILS_DIR)
mark_as_advanced(STEPCODE_UTILS_LIBRARY)

# Local Variables:
# tab-width: 8
# mode: cmake
# indent-tabs-mode: t
# End:
# ex: shiftwidth=2 tabstop=8

