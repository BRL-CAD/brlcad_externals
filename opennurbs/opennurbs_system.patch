--- opennurbs/opennurbs_system.h	2023-09-09 13:52:46.169646248 -0400
+++ openNURBS/opennurbs_system.h	2023-09-09 13:43:33.716976293 -0400
@@ -383,7 +383,7 @@
 */
 
 
-#if defined(_M_X64) && defined(WIN32) && defined(WIN64)
+#if (defined(_M_X64) || defined(_M_ARM64)) && defined(WIN32) && defined(WIN64)
 // 23 August 2007 Dale Lear
 
 #if defined(_INC_WINDOWS)
@@ -406,7 +406,7 @@
 #pragma ON_PRAGMA_WARNING_AFTER_DIRTY_INCLUDE
 #endif
 
-#if defined(_M_X64) && defined(WIN32) && defined(WIN64)
+#if (defined(_M_X64) || defined(_M_ARM64)) && defined(WIN32) && defined(WIN64)
 // 23 August 2007 Dale Lear
 //   windows.h unconditionally defines WIN32  This is a bug
 //   and the hope is this simple undef will let us continue.
@@ -540,8 +540,10 @@
 #pragma ON_PRAGMA_WARNING_AFTER_DIRTY_INCLUDE
 
 #pragma ON_PRAGMA_WARNING_BEFORE_DIRTY_INCLUDE
-#if defined(ON_RUNTIME_ANDROID) || defined(ON_RUNTIME_LINUX)
+#if defined(ON_RUNTIME_ANDROID) || defined(ON_RUNTIME_LINUX) || defined(ON_RUNTIME_BSD)
 #include "android_uuid/uuid.h"
+#elif defined(ON_RUNTIME_WIN)
+#include <Rpc.h>
 #else
 #include <uuid/uuid.h>
 #endif
--- opennurbs/opennurbs_system_runtime.h	2023-09-09 13:52:46.169646248 -0400
+++ openNURBS/opennurbs_system_runtime.h	2023-09-09 13:43:33.724976199 -0400
@@ -60,6 +60,11 @@
 #define ON_RUNTIME_LINUX
 #endif
 
+#elif defined(__OpenBSD__) || defined(__NetBSD__) || defined(__FreeBSD__) || defined(__bsdi__)
+#if !defined(ON_RUNTIME_BSD)
+#define ON_RUNTIME_BSD
+#endif
+
 #endif
 /*
 //
@@ -137,7 +142,7 @@
 #define ON_RUNTIME_WIN_WINOS
 #endif
 
-#if defined(_M_X64) || defined(_WIN64)
+#if defined(_M_X64) || defined(_M_ARM64) || defined(_WIN64)
 #define ON_64BIT_RUNTIME
 #elif defined(_M_X86) || defined(_WIN32)
 #define ON_32BIT_RUNTIME
@@ -146,7 +151,7 @@
 #endif
 
 #if !defined(ON_LITTLE_ENDIAN)
-#if (defined(_M_X64) || defined(_M_IX86) || defined (__i386__) || defined( __x86_64__ ))
+#if (defined(_M_X64) || defined(_M_ARM64) || defined(_M_IX86) || defined(__i386__) || defined(__x86_64__) || defined(__x86_64))
 #define ON_LITTLE_ENDIAN
 #endif
 #endif
@@ -157,9 +162,9 @@
 #define ON_SIZEOF_WCHAR_T 4
 #endif
 
-#elif defined(ON_RUNTIME_LINUX)
+#elif defined(ON_RUNTIME_LINUX) || defined(ON_RUNTIME_BSD)
 
-#if defined(__x86_64__)
+#if defined(__x86_64__) || defined(__x86_64)
 #define ON_64BIT_RUNTIME
 #else
 #define ON_32BIT_RUNTIME
@@ -171,7 +176,7 @@
 #endif
 
 #if !defined(ON_LITTLE_ENDIAN)
-#if defined( __x86_64__ )
+#if defined( __x86_64__ ) || defined(__x86_64)
 #define ON_LITTLE_ENDIAN
 #endif
 #endif
